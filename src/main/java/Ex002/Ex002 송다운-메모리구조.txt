메모리의 구조

프로그램이 실행되기 위해서는 먼저 프로그램이 메모리에 로드 되어야 한다.
또한, 프로그램에서 사용되는 변수들을 저장할 메모리도 필요하다.
컴퓨터 운영체제는 프로그램의 실행을 위해 다양한 메모리 공간을 제공한다.
프로그램이 운영체제로부터 할당받는 대표적인 메모리 공간은
1. 코드 영역
2. 데이터 영역
3. 스택 영역
4. 힙 영역

코드 영역 : 실행할 프로그램의 코드가 저장되는 영역 (텍스트 영역이라고도 부른다)
데이터 영역 : 프로그램의 전역 변수와 정적 변수가 저장되는 영역 (프로그램의 시작과 함께 할당되며 프로그램이 종료되면 소멸 된다)
스택 영역 : 프로그램이 자동으로 사용하는 임시 메모리 영역이다. 함수 호출 시 생성되는 지역 변수(메서드 안에서 선언된 변수)와 매개 변수(지역 변수의 일종으로, 메서드를 호출할 때 값을 넣어준다)가 저장되는 영역이고, 함수 호출이 완료되면 사라진다.
힙 영역 : 프로그래머가 직접 공간을 할당, 해제 하는 메모리 공간이다.(malloc() 또는 new 연산자를 통해 메모리를 할당하고, free() 또는 delete 연산자를 통해 메모리를 해제 한다)
힙 영역은 선입선출의 방식으로, 가장 먼저 들어온 데이터가 가장 먼저 인출 된다.
* 이유는, 힙 영역이 메모리의 낮은 주소에서 높은 주소의 방향으로 할당되기 때문이다.


힙과 스택영역은 같은 공간을 공유한다.
힙이 메모리 위쪽 주소부터 할당되면 스택은 아래쪽 부터 할당되는 식이다. 그래서 각 영역이 상대 공간을 침범하는 일이 발생 할 수 있는데 이를 각각 HEAP OVERFLOW, STACK OVERFLOW 라고 칭한다.
STACK 영역이 크면 클 수록 HEAP 영역이 작아지고, HEAP 영역이 크면 클수록 STACK 영역이 작아집니다.